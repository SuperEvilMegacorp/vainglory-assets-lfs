{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JSON API Schema",
  "description":  "Il s’agit d’un schéma de réponses au format API JSON. Pour plus d’informations, voir http://jsonapi.org",
  "oneOf": [
    {
      "$ref": "#/definitions/success"
    },
    {
      "$ref": "#/definitions/failure"
    },
    {
      "$ref": "#/definitions/info"
    }
  ],
  "definitions": {
    "success": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/data"
        },
        "included": {
          "description": "Pour réduire le nombre de requêtes HTTP, les serveurs **PEUVENT** permettre les réponses incluant des ressources connexes ainsi que les principales ressources demandées. De telles réactions sont appelées des \"documents composés\".",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resource"
          },
          "uniqueItems": true
        },
        "meta": {
          "$ref": "#/definitions/meta"
        },
        "links": {
          "description": "Membres lien, associés aux données primaires.",
          "allOf": [
            {
              "$ref": "#/definitions/links"
            },
            {
              "$ref": "#/definitions/pagination"
            }
          ]
        },
        "jsonapi": {
          "$ref": "#/definitions/jsonapi"
        }
      },
      "additionalProperties": false
    },
    "failure": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/error"
          },
          "uniqueItems": true
        },
        "meta": {
          "$ref": "#/definitions/meta"
        },
        "jsonapi": {
          "$ref": "#/definitions/jsonapi"
        }
      },
      "additionalProperties": false
    },
    "info": {
      "type": "object",
      "required": [
        "meta"
      ],
      "properties": {
        "meta": {
          "$ref": "#/definitions/meta"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "jsonapi": {
          "$ref": "#/definitions/jsonapi"
        }
      },
      "additionalProperties": false
    },
    "meta": {
      "description": "Information-meta non-standard qui ne peut pas être représenté comme un attribut ou une relation.",
      "type": "object",
      "additionalProperties": true
    },
    "data": {
      "description": "Les \"données primaires\" du document sont une représentation de la ressource ou de la collection de ressources ciblées par une demande.",
      "oneOf": [
        {
          "$ref": "#/definitions/resource"
        },
        {
          "description": "Un tableau d’objets de ressource, un tableau d’objets d’identificateur de ressource ou un tableau vide ([]), pour les requêtes qui ciblent des collections de ressources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/resource"
          },
          "uniqueItems": true
        },
        {
          "description": "null si la demande est celle qui pourrait correspondre à une seule ressource, mais ne fonctionne pas actuellement.",
          "type": "null"
        }
      ]
    },
    "resource": {
      "description": "\"Objets ressources\" figurent dans un document JSON API pour représenter des ressources.",
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "attributes": {
          "anyOf": [
            { "$ref": "#/definitions/matchAttributes" },
            { "$ref": "#/definitions/rosterAttributes" },
            { "$ref": "#/definitions/participantAttributes" },
            { "$ref": "#/definitions/playerAttributes" },
            { "$ref": "#/definitions/telemetryAttributes"}
          ]
        },
        "relationships": {
          "$ref": "#/definitions/relationships"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "meta": {
          "$ref": "#/definitions/meta"
        }
      },
      "additionalProperties": false
    },
    "links": {
      "description": "Un objet ressource **PEUT** contenir des références à d’autres objets de ressource (\"relationships\"). Les relations peuvent être à un ou à plusieurs. Les relations peuvent être spécifiées en incluant un membre dans l’objet de liens une ressource.",
      "type": "object",
      "properties": {
        "self": {
          "description": "Un membre de 'soi', dont la valeur est une URL pour la relation elle-même (un \"relation URL\"). Cette URL permet au client de manipuler directement la relation. Par exemple, il permettrait à un client enlever un 'auteur' d’un 'article' sans supprimer la ressource des gens elle-même.",
          "type": "string",
          "format": "uri"
        },
        "related": {
          "$ref": "#/definitions/link"
        }
      },
      "additionalProperties": true
    },
    "link": {
      "description": "Un lien **DOIT** être représenté sous la forme: une chaîne contenant l’URL du lien ou un objet de liaison.",
      "oneOf": [
        {
          "description": "Une chaîne contenant l’URL du lien.",
          "type": "string",
          "format": "uri"
        },
        {
          "type": "object",
          "required": [
            "href"
          ],
          "properties": {
            "href": {
              "description": "Une chaîne contenant l’URL du lien.",
              "type": "string",
              "format": "uri"
            },
            "meta": {
              "$ref": "#/definitions/meta"
            }
          }
        }
      ]
    },
    "matchAttributes": {
        "properties": {
          "createdAt":  { "type": "string" },
          "duration":  { "type": "number" },
          "gameMode":  { "type": "string" },
          "patchVersion": { "type": "string" },
          "shardId": { "type": "string" },
          "stats": {
            "properties": {
              "endGameReason": { "type": "string" },
              "queue": { "type": "string" }
            },
            "required": ["endGameReason", "queue"]
          },
          "titleId": { "type": "string" }
        },
        "additionalProperties": false,
        "required": ["createdAt", "duration", "gameMode",
        "patchVersion", "shardId", "stats", "titleId"]
    },
    "participantAttributes": {
        "properties": {
          "actor": {"type": "string"},
          "stats": {
            "properties":{
              "assists": {"type": "number"},
              "crystalMineCaptures": {"type": "number"},
              "deaths": {"type": "number"},
              "farm": {"type": "number"},
              "firstAfkTime": {"type": "number"},
              "goldMineCaptures": {"type": "number"},
              "itemGrants": {"type": "object"},
              "itemSells": {"type": "object"},
              "itemUses": {"type": "object"},
              "items": {"type": "array"},
              "jungleKills": {"type": "number"},
              "karmaLevel": {"type": "number"},
              "kills": {"type": "number"},
              "krakenCaptures": {"type": "number"},
              "level": {"type": "number"},
              "minionKills": {"type": "number"},
              "nonJungleMinionKills": {"type": "number"},
              "skillTier": {"type": "number"},
              "skinKey": {"type": "string"},
              "turretCaptures": {"type": "number"},
              "wentAfk": {"type": "boolean"},
              "winner": {"type": "boolean"}
            },
            "required": ["assists", "crystalMineCaptures", "deaths", "farm",
            "firstAfkTime", "goldMineCaptures","itemGrants", "itemSells", "itemUses",
          "items", "jungleKills", "karmaLevel", "kills", "krakenCaptures", "level",
        "minionKills", "nonJungleMinionKills", "skillTier", "turretCaptures", "wentAfk", "winner"]
          }
        },
        "additionalProperties": false,
        "required": ["actor", "stats"]
      },
    "playerAttributes": {
      "properties": {
        "name": {"type": "string"},
        "shardId": {"type": "string"},
        "stats": {
          "properties":{
            "level": {"type": "number"},
            "lifetimeGold": {"type": "number"},
            "lossStreak": {"type": "number"},
            "played": {"type": "number"},
            "played_ranked": {"type": "number"},
            "winStreak": {"type": "number"},
            "wins": {"type": "number"},
            "xp": {"type": "number"}
          },
          "required": ["level", "lifetimeGold", "lossStreak", "played",
            "played_ranked", "winStreak", "wins", "xp"]
        },
        "titleId": {"type": "string"}
      },
      "additionalProperties": false,
      "required": ["name", "shardId", "stats", "titleId"]
    },
    "rosterAttributes": {
      "properties": {
        "stats": {
          "properties": {
            "acesEarned": {"type": "number"},
            "gold": {"type": "number"},
            "heroKills": {"type": "number"},
            "krakenCaptures": {"type": "number"},
            "side": {"type": "string"},
            "turretKills": {"type": "number"},
            "turretsRemaining": {"type": "number"}
          },
            "required": ["acesEarned", "gold", "heroKills",
              "krakenCaptures", "side", "turretKills", "turretsRemaining"]
        }
      },
      "additionalProperties": false,
      "required": ["stats"]
    },
    "telemetryAttributes": {
      "properties": {
        "URL":{"type": "string"},
        "contentType":{"type": "string"},
        "createdAt":{"type": "string"},
        "description":{"type": "string"},
        "filename":{"type": "string"},
        "name":{"type": "string"}
      },
      "additionalProperties": false,
      "required": ["URL", "contentType", "createdAt", "description", "filename", "name"]
    },
    "relationships": {
      "description":  "Membres de l’objet de relations (\"relations\") représentent les références de l’objet de ressource dans lequel il est défini à d’autres objets de ressource.",
      "type": "object",
      "patternProperties": {
        "^\\w[-\\w_]*$": {
          "properties": {
            "links": {
              "$ref": "#/definitions/links"
            },
            "data": {
              "description": "Membre, dont la valeur représente \"Lien de ressource\".",
              "oneOf": [
                {
                  "$ref": "#/definitions/relationshipToOne"
                },
                {
                  "$ref": "#/definitions/relationshipToMany"
                }
              ]
            },
            "meta": {
              "$ref": "#/definitions/meta"
            }
          },
          "anyOf": [
            {"required": ["data"]},
            {"required": ["meta"]},
            {"required": ["links"]}
          ],
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "relationshipToOne": {
      "description": "Les références à d’autres objets de ressource dans un à un (\"relation\"). Les relations peuvent être spécifiées en incluant un membre dans l’objet de liens une ressource.",
      "anyOf": [
        {
          "$ref": "#/definitions/empty"
        },
        {
          "$ref": "#/definitions/linkage"
        }
      ]
    },
    "relationshipToMany": {
      "description":  "Un tableau de chaque objets contenant \"type\" et \"id\" de membres des relations à plusieurs.",

      "type": "array",
      "items": {
        "$ref": "#/definitions/linkage"
      },
      "uniqueItems": true
    },
    "empty": {
      "description": "Décrit une relation à un vide.",
      "type": "null"
    },
    "linkage": {
      "description": "Le \"type\" et \"id\" aux membres de non-vide.",
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/meta"
        }
      },
      "additionalProperties": false
    },
    "pagination": {
      "type": "object",
      "properties": {
        "first": {
          "description": "La première page de données",
          "oneOf": [
            { "type": "string", "format": "uri" },
            { "type": "null" }
          ]
        },
        "last": {
          "description": "La dernière page de données",
          "oneOf": [
            { "type": "string", "format": "uri" },
            { "type": "null" }
          ]
        },
        "prev": {
          "description": "La page précédente des données",
          "oneOf": [
            { "type": "string", "format": "uri" },
            { "type": "null" }
          ]
        },
        "next": {
          "description": "La page suivante de données",
          "oneOf": [
            { "type": "string", "format": "uri" },
            { "type": "null" }
          ]
        }
      }
    },
    "jsonapi": {
      "description": "Un objet décrivant la mise en œuvre du serveur",
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/meta"
        }
      },
      "additionalProperties": false
    },
    "error": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Un identificateur unique pour cette occurrence particulière du problème.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "status": {
          "description": "Le code d’état HTTP applicable à ce problème, exprimé comme une valeur de chaîne.",
          "type": "string"
        },
        "code": {
          "description": "Un application code d’erreur spécifique, exprimé comme une valeur de chaîne.",
          "type": "string"
        },
        "title": {
          "description": "Un résumé court, humain-lisible du problème. Il **NE DEVRAIT PAS** changer d’événement à l’apparition du problème, sauf à des fins de localisation.",
          "type": "string"
        },
        "detail": {
          "description": "Une explication humaine-lisible spécifique à cette occurrence du problème.",
          "type": "string"
        },
        "source": {
          "type": "object",
          "properties": {
            "pointer": {
              "description": "Un Pointeur JSON [RFC6901] à l’entité associée dans le document de demande [ex. \"/donné\" pour un objet de données primaires ou \"/donné/attribututs/titre\" d’un attribut spécifique].",
              "type": "string"
            },
            "parameter": {
              "description": "Un stringo indiquant quel paramètre de requête a provoqué l’erreur.",
              "type": "string"
            }
          }
        },
        "meta": {
          "$ref": "#/definitions/meta"
        }
      },
      "additionalProperties": false
    }
  }
}
